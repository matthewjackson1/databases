#### Questions ####

> Use the commands we have learned about to complete the following tasks and submit the SQL statements. Real world examples must be distinct from those used in the text.

> List the commands for adding, updating, and deleting data

A: Adding = INSERT, updating = UPDATE, deleting = DELETE

> Explain the structure for each type of command.

INSERT INTO table_name(column_1_name, column_2_name) VALUES (column_1_value_1, column_2_value_1), (column_1_value_2, column_2_value_2);

- Multiple sets of values are optional. You don't have to specify column names, it will default to the first columns of the table.

UPDATE table_name SET column_name=value WHERE column_2_name=column_2_value AND column_3_name=column_3_value;

- ANDs are optional and you can use one of many operators to check your values.

DELETE FROM table_name WHERE column_name[=/</>/<>/>=/<=]value AND column_2_name[=/</>/<>/>=/<=]value_2;

- ANDs are optional and you can use one of many operators to check your values.


> What are some the data types that can be used in tables? Give a real world example of each.

- date - 1999-01-08 - for the date of an order placed on an ecommerce website
- boolean - true or false - e.g. for whether someone has made a purchase from our ecommerce shop
- money - 12.34 - e.g. amount of money someone has in their bank account

> Think through how to create a new table to hold a list of people invited to a wedding. This table needs to have first and last name, whether they sent in their RSVP, the number of guests they are bringing, and the number of meals (1 for adults and 1/2 for children).

Which data type would you use to store each of the following pieces of information?
varchar - First and last name
boolean - Whether they sent in their RSVP.
smallint - Number of guests.
real - Number of meals.


Write a command that makes the table to track the wedding.

CREATE TABLE guests (
	guest_id integer,
	first_name varchar(255),
	last_name varchar(255),
	rsvped boolean,
	num_guests smallint,
	num_meals real
);

> Using the table we just created, write a command that adds a column to track whether they were sent a thank you card.

A: ALTER TABLE guests ADD COLUMN sent_thanks boolean;


> You have decided to move the data about the meals to another table, so write a command to remove the column storing the number meals from the wedding table.

A: ALTER TABLE guests DROP COLUMN num_meals; 

> The guests are going to need a place to sit at the reception, so write a statement that adds a column for table number.

A: ALTER TABLE guests ADD COLUMN table_number integer;

> The wedding is over and we do not need to keep this information, so write a command that deletes the wedding table from the database.

A: DROP TABLE guests;


> Write a command to make a new table to hold the books in a library with the columns ISBN, title, author, genre, publishing date, number of copies, and available copies.

CREATE TABLE books (
	isbn integer,
	title varchar(255),
	author varchar(255),
	genre varchar(255),
	publish_date date,
	num_copies integer,
	num_available integer 
);

> Find three books and add their information to the table.

INSERT INTO books 
VALUES 
	(9780091929787,"Rework","Jason Fried", "Business", 2010-04-09, 6, 5),
	(9781784703936,"Homo Deus","Yuval Noah Harari", "Futurology", 2015-10-10, 3, 3),
	(9781786489036,"The Little Book of Ikigai","Ken Mogi", "Philosophy", 2017-06-01, 10, 1);

> Say that someone has just checked out one of the books. Change the available copies column to 1 less.

A: UPDATE books SET num_available=4 WHERE isbn=9780091929787;

> Now one of the books has been added to the banned books list. Remove it from the table.

A: DELETE FROM books WHERE isbn=9781784703936;

> Write a command to make a new table to hold spacecrafts. Information should include id, name, year launched, country of origin, a brief description of the mission, orbiting body, if it is currently operating, and approximate miles from Earth.

CREATE TABLE spacecraft (
	id integer,
	name varchar(255),
	year_launched integer,
	origin_country varchar(255),
	mission_description text,
	orbiting_body varchar(255),
	operating boolean,
	earth_distance integer
)

> Add 3 non-Earth-orbiting satellites to the table.

INSERT INTO spacecraft
VALUES
(1, "Luna 10", 1966, "Soviet Union", "Solar-plasma studies, and devices for measuring infrared emissions from the Moon and radiation conditions of the lunar environment", "Moon", false, 300000),
(2,"Magic Schoolbus", 1995, "United States", "Teaching kids science", "Jupiter", true, 100000002)
(3, "Elon Musk's Tesla", 2018, "United States", "Be the first car in space", "Asteroid Belt", true, 4301203);

> Remove one of the satellites from the table since it has just been crashed into the planet.

A: DELETE FROM spacecraft WHERE id=2;

> Edit another satellite because it is no longer operating and change the value to reflect that.

A: UPDATE spacecraft SET operating=false WHERE id=2;

> Write a command to make a new table to hold the emails in your inbox. This table should include an id, the subject line, the sender, any additional recipients, the body of the email, the timestamp, whether or not it’s been read, and the id of the email chain it’s in.

CREATE TABLE inbox (
	id integer,
	subject varchar(255),
	sender_id integer,
	additional_recipients integer[],
	body text,
	timestamp timestamp,
	read boolean,
	email_chain_id integer
);

> Add 3 new emails to the inbox.

INSERT INTO inbox
VALUES
(111,"Earlier",123,[124,125,011],"Hey Jenny, great to see you earlier, catch up soon! Mark", "2017-06-22 19:10:25-07", true, 374829),
(113,"Coffee",129,[124,413],"Hi Jenny, fancy a coffee later? Lizzie", "2017-06-22 21:10:25-07", false, 374821),
(001,"Earlier",122,[121,105,911,283,329,392],"Hey all! Carol singers will be visiting the office this afternoon! Bring your seasons greetings and holiday cheer for some Christmas classics in the foyer at 4pm. Jane", "2016-12-22 14:30:30-05", true, 374829);


> You’ve just deleted one of the emails, so write a command to remove the row from the inbox table.

DELETE FROM inbox WHERE id=001;


> You started reading an email but just heard a crash in another room. Mark the email as unread before investigating, so you can come back to it later.

UPDATE inbox SET read=false WHERE id=111;